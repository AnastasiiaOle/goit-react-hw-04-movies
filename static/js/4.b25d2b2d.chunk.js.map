{"version":3,"sources":["services/movies-api.js","components/cast/castList.module.css","components/reviews/reviews.module.css","components/cast/CastListItem.js","helpers/getId.js","components/cast/CastList.js","components/reviews/ReviewsListItem.js","components/reviews/Reviews.js","components/movieDetails/MovieDetailis.js","pages/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","urlApi","key","fetchTrands","get","then","response","data","results","fetchMovies","searchQuery","fetchMoviesWithId","movieId","fetchReviews","fetchCast","cast","module","exports","CastListItem","item","photo","src","alt","name","character","getIdFromProps","props","match","params","Cast","state","items","id","this","itemsAPI","setState","className","styles","castList","map","castListItem","profile_path","cast_id","Component","ReviewsListItem","author","content","Reviews","reviewsList","length","withRouter","onGoback","type","onClick","original_title","original_name","overview","to","path","component","MovieDetailsPage","handleGoback","history","location","push","from","poster_path"],"mappings":"yIAAA,+LAEAA,IAAMC,SAASC,QAAU,wBACzB,IAAMC,EAAS,gCACTC,EAAM,mCAECC,EAAc,WACzB,OAAOL,IAAMM,IAAN,UAAaH,EAAb,oCAA+CC,IAAOG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGjFC,EAAc,SAAAC,GACzB,OAAOZ,IACJM,IADI,UACGH,EADH,gCACiCC,EADjC,iCAC6DQ,EAD7D,YAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGvBG,EAAoB,SAAAC,GAC/B,OAAOd,IAAMM,IAAN,UAAaH,EAAb,iBAA4BW,EAA5B,oBAA+CV,EAA/C,oBAAqEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG3FM,EAAe,SAAAD,GAC1B,OAAOd,IAAMM,IAAN,UAAaH,EAAb,iBAA4BW,EAA5B,4BAAuDV,IAAOG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAEzFM,EAAY,SAAAF,GACvB,OAAOd,IAAMM,IAAN,UAAaH,EAAb,iBAA4BW,EAA5B,4BAAuDV,IAAOG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKQ,U,mBCvBtGC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,aAAe,iC,mBCAvED,EAAOC,QAAU,CAAC,YAAc,+B,uJCmBjBC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACnB,gCACE,qBAAKC,IAAKD,EAAOE,IAAI,KACrB,4BAAIH,EAAKI,OACT,kCAAKJ,EAAKK,iB,QCNCC,EADQ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOhB,S,iBCM9BiB,E,4MACnBC,MAAQ,CACNC,MAAO,M,uDAGT,WAAqB,IAAD,OACZC,EAAKP,EAAeQ,KAAKP,OAC/BQ,IAAmBF,GAAI3B,MAAK,SAAA0B,GAAK,OAAI,EAAKI,SAAS,CAAEJ,e,oBAGvD,WACE,IAAQA,EAAUE,KAAKH,MAAfC,MACR,OACE,oBAAIK,UAAWC,IAAOC,SAAtB,SACGP,GACCA,EAAMQ,KAAI,SAAApB,GAAI,OACZ,oBAAuBiB,UAAWC,IAAOG,aAAzC,SACE,cAAC,EAAD,CACEpB,MACED,EAAKsB,aAAL,yCACsCtB,EAAKsB,cACvC,sHAENtB,KAAMA,KAPDA,EAAKuB,kB,GAhBQC,aCWnBC,EAdS,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAH,OACtB,gCACE,0CAAaA,EAAK0B,UAClB,kCAAK1B,EAAK2B,e,iBCAOC,E,4MACnBjB,MAAQ,CACNC,MAAO,I,uDAGT,WAAqB,IAAD,OACZC,EAAKP,EAAeQ,KAAKP,OAC/BQ,IAAsBF,GAAI3B,MAAK,SAAA0B,GAAK,OAAI,EAAKI,SAAS,CAAEJ,e,oBAG1D,WACE,IAAQA,EAAUE,KAAKH,MAAfC,MACR,OACE,oBAAIK,UAAWC,IAAOW,YAAtB,SACGjB,EAAMkB,OAAS,EACdlB,EAAMQ,KAAI,SAAApB,GAAI,OACZ,6BACE,cAAC,EAAD,CAAiBA,KAAMA,KADhBA,EAAKa,OAKhB,+E,GArB2BW,aCqCtBO,eArCD,SAAC,GAAD,IAAG/B,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAO+B,EAAhB,EAAgBA,SAAhB,OACZ,oCACE,gCACE,wBAAQC,KAAK,SAASC,QAASF,EAA/B,8BAGA,+BACGhC,EAAKmC,eADR,IACyBnC,EAAKoC,iBAE9B,qBAAKlC,IAAKD,EAAOE,IAAI,KACrB,0CACA,4BAAIH,EAAKqC,cAEX,gCACE,uDACA,cAAC,IAAD,CAAMC,GAAE,kBAAatC,EAAKa,GAAlB,SAAR,kBAFF,IAEmD,uBACjD,cAAC,IAAD,CAAMyB,GAAE,kBAAatC,EAAKa,GAAlB,YAAR,wBAEF,gCACE,cAAC,IAAD,CAAO0B,KAAK,wBAAwBC,UAAW9B,IAC/C,cAAC,IAAD,CAAO6B,KAAK,2BAA2BC,UAAWZ,aCpBnCa,E,4MACnB9B,MAAQ,CACNX,KAAM,M,EAaR0C,aAAe,WACb,MAA8B,EAAKnC,MAA3BoC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACbA,EAASjC,MACXgC,EAAQE,KAAKD,EAASjC,MAAMmC,MAG9BH,EAAQE,KAAK,Y,uDAXf,WAAqB,IAAD,OACZhC,EAAKP,EAAeQ,KAAKP,OAC/BQ,IAA2BF,GAAI3B,MAAK,SAAAc,GAAI,OAAI,EAAKgB,SAAS,CAAEhB,c,oBAY9D,WACE,IAAQA,EAASc,KAAKH,MAAdX,KACR,OACE,8BACGA,GACC,cAAC,EAAD,CACEC,MACED,EAAK+C,YAAL,yCACsC/C,EAAK+C,aACvC,sHAEN/C,KAAMA,EACNgC,SAAUlB,KAAK4B,qB,GApCmBlB","file":"static/js/4.b25d2b2d.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\nconst urlApi = 'https://api.themoviedb.org/3/';\nconst key = 'd61c67c50c748f4d2b177bb7e6865fde';\n\nexport const fetchTrands = () => {\n  return axios.get(`${urlApi}trending/all/day?api_key=${key}`).then(response => response.data.results);\n};\n\nexport const fetchMovies = searchQuery => {\n  return axios\n    .get(`${urlApi}search/movie?api_key=${key}&language=en-US&query=${searchQuery}&page=1`)\n    .then(response => response.data.results);\n};\n\nexport const fetchMoviesWithId = movieId => {\n  return axios.get(`${urlApi}movie/${movieId}?api_key=${key}&language=en-US`).then(response => response.data);\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`${urlApi}movie/${movieId}/reviews?api_key=${key}`).then(response => response.data.results);\n};\nexport const fetchCast = movieId => {\n  return axios.get(`${urlApi}movie/${movieId}/credits?api_key=${key}`).then(response => response.data.cast);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"castList_castList__1BJYY\",\"castListItem\":\"castList_castListItem__2wgLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewsList\":\"reviews_reviewsList__1k_Mi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CastListItem = ({ item, photo }) => (\n  <div>\n    <img src={photo} alt=\"\" />\n    <p>{item.name}</p>\n    <p> {item.character}</p>\n  </div>\n);\nCastListItem.propTypes = {\n  photo: PropTypes.string.isRequired,\n  item: PropTypes.objectOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default CastListItem;\n","const getIdFromProps = props => props.match.params.movieId;\nexport default getIdFromProps;\n","import React, { Component } from 'react';\nimport CastListItem from './CastListItem';\nimport * as itemsAPI from '../../services/movies-api';\nimport getIdFromProps from '../../helpers/getId';\nimport styles from './castList.module.css';\n\nexport default class Cast extends Component {\n  state = {\n    items: null,\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    itemsAPI.fetchCast(id).then(items => this.setState({ items }));\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <ul className={styles.castList}>\n        {items &&\n          items.map(item => (\n            <li key={item.cast_id} className={styles.castListItem}>\n              <CastListItem\n                photo={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                    : 'https://us.123rf.com/450wm/oculo/oculo2004/oculo200400003/143645399-stock-vector-no-image-available-icon-.jpg?ver=6'\n                }\n                item={item}\n              />\n            </li>\n          ))}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReviewsListItem = ({ item }) => (\n  <div>\n    <h3>Author: {item.author}</h3>\n    <p> {item.content}</p>\n  </div>\n);\nReviewsListItem.propTypes = {\n  item: PropTypes.objectOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default ReviewsListItem;\n","import React, { Component } from 'react';\nimport * as itemsAPI from '../../services/movies-api';\nimport ReviewsListItem from './ReviewsListItem';\nimport getIdFromProps from '../../helpers/getId';\nimport styles from './reviews.module.css';\n\nexport default class Reviews extends Component {\n  state = {\n    items: [],\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    itemsAPI.fetchReviews(id).then(items => this.setState({ items }));\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <ul className={styles.reviewsList}>\n        {items.length > 0 ? (\n          items.map(item => (\n            <li key={item.id}>\n              <ReviewsListItem item={item} />\n            </li>\n          ))\n        ) : (\n          <p>We dont have any reviews for this movie.</p>\n        )}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Cast from '../cast/CastList';\nimport Reviews from '../reviews/Reviews';\n\nconst Movie = ({ item, photo, onGoback }) => (\n  <article>\n    <div>\n      <button type=\"button\" onClick={onGoback}>\n        Back to articles\n      </button>\n      <h2>\n        {item.original_title} {item.original_name}\n      </h2>\n      <img src={photo} alt=\"\" />\n      <h3>Overview</h3>\n      <p>{item.overview}</p>\n    </div>\n    <div>\n      <p>Additional information</p>\n      <Link to={`/movies/${item.id}/cast`}>Cast</Link> <br />\n      <Link to={`/movies/${item.id}/reviews`}>Reviews</Link>\n    </div>\n    <div>\n      <Route path=\"/movies/:movieId/cast\" component={Cast} />\n      <Route path=\"/movies/:movieId/reviews\" component={Reviews} />\n    </div>\n  </article>\n);\nMovie.propTypes = {\n  onGoback: PropTypes.func.isRequired,\n  photo: PropTypes.string.isRequired,\n  item: PropTypes.objectOf(\n    PropTypes.shape({\n      original_title: PropTypes.string,\n      original_name: PropTypes.string,\n      poster_path: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default withRouter(Movie);\n","import React, { Component } from 'react';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport Movie from '../components/movieDetails/MovieDetailis';\nimport * as itemsAPI from '../services/movies-api';\nimport getIdFromProps from '../helpers/getId';\n\nexport default class MovieDetailsPage extends Component {\n  state = {\n    item: null,\n  };\n\n  static propTypes = {\n    location: ReactRouterPropTypes.location.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    itemsAPI.fetchMoviesWithId(id).then(item => this.setState({ item }));\n  }\n\n  handleGoback = () => {\n    const { history, location } = this.props;\n    if (location.state) {\n      history.push(location.state.from);\n      return;\n    }\n    history.push('/movies');\n  };\n\n  render() {\n    const { item } = this.state;\n    return (\n      <div>\n        {item && (\n          <Movie\n            photo={\n              item.poster_path\n                ? `https://image.tmdb.org/t/p/w200${item.poster_path}`\n                : 'https://us.123rf.com/450wm/oculo/oculo2004/oculo200400003/143645399-stock-vector-no-image-available-icon-.jpg?ver=6'\n            }\n            item={item}\n            onGoback={this.handleGoback}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}